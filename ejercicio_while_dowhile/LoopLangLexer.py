# Generated from LoopLang.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,97,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,
        0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,
        6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,5,16,81,8,16,10,16,12,16,
        84,9,16,1,17,4,17,87,8,17,11,17,12,17,88,1,18,4,18,92,8,18,11,18,
        12,18,93,1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,1,
        0,4,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,
        3,0,9,10,13,13,32,32,99,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,1,39,1,0,0,0,3,45,1,0,0,0,5,48,1,0,0,0,7,50,1,0,0,0,9,52,
        1,0,0,0,11,54,1,0,0,0,13,56,1,0,0,0,15,58,1,0,0,0,17,60,1,0,0,0,
        19,62,1,0,0,0,21,64,1,0,0,0,23,66,1,0,0,0,25,68,1,0,0,0,27,70,1,
        0,0,0,29,72,1,0,0,0,31,75,1,0,0,0,33,78,1,0,0,0,35,86,1,0,0,0,37,
        91,1,0,0,0,39,40,5,119,0,0,40,41,5,104,0,0,41,42,5,105,0,0,42,43,
        5,108,0,0,43,44,5,101,0,0,44,2,1,0,0,0,45,46,5,100,0,0,46,47,5,111,
        0,0,47,4,1,0,0,0,48,49,5,40,0,0,49,6,1,0,0,0,50,51,5,41,0,0,51,8,
        1,0,0,0,52,53,5,123,0,0,53,10,1,0,0,0,54,55,5,125,0,0,55,12,1,0,
        0,0,56,57,5,61,0,0,57,14,1,0,0,0,58,59,5,59,0,0,59,16,1,0,0,0,60,
        61,5,43,0,0,61,18,1,0,0,0,62,63,5,45,0,0,63,20,1,0,0,0,64,65,5,42,
        0,0,65,22,1,0,0,0,66,67,5,47,0,0,67,24,1,0,0,0,68,69,5,60,0,0,69,
        26,1,0,0,0,70,71,5,62,0,0,71,28,1,0,0,0,72,73,5,61,0,0,73,74,5,61,
        0,0,74,30,1,0,0,0,75,76,5,33,0,0,76,77,5,61,0,0,77,32,1,0,0,0,78,
        82,7,0,0,0,79,81,7,1,0,0,80,79,1,0,0,0,81,84,1,0,0,0,82,80,1,0,0,
        0,82,83,1,0,0,0,83,34,1,0,0,0,84,82,1,0,0,0,85,87,7,2,0,0,86,85,
        1,0,0,0,87,88,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,0,89,36,1,0,0,0,
        90,92,7,3,0,0,91,90,1,0,0,0,92,93,1,0,0,0,93,91,1,0,0,0,93,94,1,
        0,0,0,94,95,1,0,0,0,95,96,6,18,0,0,96,38,1,0,0,0,4,0,82,88,93,1,
        6,0,0
    ]

class LoopLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    WHILE = 1
    DO = 2
    LPAREN = 3
    RPAREN = 4
    LBRACE = 5
    RBRACE = 6
    ASSIGN = 7
    SEMI = 8
    PLUS = 9
    MINUS = 10
    MUL = 11
    DIV = 12
    LT = 13
    GT = 14
    EQ = 15
    NEQ = 16
    ID = 17
    INT = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'while'", "'do'", "'('", "')'", "'{'", "'}'", "'='", "';'", 
            "'+'", "'-'", "'*'", "'/'", "'<'", "'>'", "'=='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "WHILE", "DO", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "ASSIGN", 
            "SEMI", "PLUS", "MINUS", "MUL", "DIV", "LT", "GT", "EQ", "NEQ", 
            "ID", "INT", "WS" ]

    ruleNames = [ "WHILE", "DO", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
                  "ASSIGN", "SEMI", "PLUS", "MINUS", "MUL", "DIV", "LT", 
                  "GT", "EQ", "NEQ", "ID", "INT", "WS" ]

    grammarFileName = "LoopLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


